import tkinter as tk
from tkinter import messagebox
import threading
import datetime
import time
import pygame

class AlarmApp:
    def __init__(self, master):
        self.master = master
        master.title("Alarm Clock")
        
        self.label = tk.Label(master, text="Enter alarm time (24hr format HH:MM):")
        self.label.pack(pady=10)
        
        self.time_entry = tk.Entry(master)
        self.time_entry.pack(pady=5)
        
        self.set_button = tk.Button(master, text="Set Alarm", command=self.set_alarm)
        self.set_button.pack(pady=5)
        
        self.alarm_time = None
        self.alarm_thread = None
        self.stop_alarm_flag = threading.Event()
        
        # Initialize pygame mixer
        pygame.mixer.init()
        
        # Specify the path to your sound file here
        self.alarm_sound_file = "C:\Users\igjad\Downloads\sky_full_of_stars.mp3"  # Change this to your sound file
        
    def set_alarm(self):
        alarm_time = self.time_entry.get()
        try:
            # Parse the input time
            alarm_hour, alarm_minute = map(int, alarm_time.split(":"))
            now = datetime.datetime.now()
            # Create a datetime object for the alarm time today
            self.alarm_time = now.replace(hour=alarm_hour, minute=alarm_minute, second=0, microsecond=0)
            if self.alarm_time < now:
                # If the time is already passed today, set for tomorrow
                self.alarm_time += datetime.timedelta(days=1)
            messagebox.showinfo("Alarm Set", f"Alarm set for {self.alarm_time.strftime('%Y-%m-%d %H:%M:%S')}")
            
            # Start the alarm thread
            if self.alarm_thread and self.alarm_thread.is_alive():
                self.stop_alarm_flag.set()
                self.alarm_thread.join()
            self.stop_alarm_flag.clear()
            self.alarm_thread = threading.Thread(target=self.check_alarm)
            self.alarm_thread.daemon = True
            self.alarm_thread.start()
        except ValueError:
            messagebox.showerror("Invalid Time", "Please enter time in HH:MM format.")
                
    def check_alarm(self):
        while not self.stop_alarm_flag.is_set():
            now = datetime.datetime.now()
            if now >= self.alarm_time:
                self.play_alarm()
                self.alarm_time = None
                break
            time.sleep(1)
                
    def play_alarm(self):
        messagebox.showinfo("Alarm", "Time to wake up!")
        # Play the alarm sound
        pygame.mixer.music.load(self.alarm_sound_file)
        pygame.mixer.music.play()
        
# Create the main window and run the app
if __name__ == "__main__":
    root = tk.Tk()
    app = AlarmApp(root)
    root.mainloop()
